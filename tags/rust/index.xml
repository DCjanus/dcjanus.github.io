<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Rust - 标签 - DCjanus 的博客</title><link>https://blog.dcjanus.com/tags/rust/</link><description>Rust - 标签 - DCjanus 的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dcjanus@dcjanus.com (DCjanus)</managingEditor><webMaster>dcjanus@dcjanus.com (DCjanus)</webMaster><lastBuildDate>Fri, 04 Jul 2025 01:34:15 +0800</lastBuildDate><atom:link href="https://blog.dcjanus.com/tags/rust/" rel="self" type="application/rss+xml"/><item><title>LZF 流式解压</title><link>https://blog.dcjanus.com/posts/streaming-lzf-decode/</link><pubDate>Fri, 04 Jul 2025 01:34:15 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/streaming-lzf-decode/</guid><description><![CDATA[<p>我最近在业余时间重写一个之前为工作开发的 Redis RDB 解析工具<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>，旧版工具在处理大 Key 时内存占用过高，有时会触发容器的内存限制，导致解析失败。因此，新版本的核心目标是实现增量解析。</p>
<p>Redis 中对字符串对象，允许使用 LZF 压缩来节省空间，但常见 LZF 实现都只支持一次性解压，仍无法彻底规避内存问题。简单了解 LZF 算法后，发现其实现极为简单，且有流式解压的潜力，因此决定自己实现一个流式解压器。</p>]]></description></item><item><title>Linux 内核版本号过大导致 TiKV 的一次 Panic</title><link>https://blog.dcjanus.com/posts/linux-version-number-and-tikv-panic/</link><pubDate>Sat, 17 Dec 2022 23:19:25 +0800</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/linux-version-number-and-tikv-panic/</guid><description><![CDATA[<h2 id="tldr" class="headerLink">
    <a href="#tldr" class="header-mark"></a>TLDR</h2><p>Linux 内核版本号曾被认为可以用三个 8bit 无符号整数表示，但后来这个约定被打破。TiKV 间接使用的库在解析内核版本号时，没有考虑到这一点，导致 panic。</p>]]></description></item><item><title>Cargo Registry 稀疏索引的一些介绍</title><link>https://blog.dcjanus.com/posts/cargo-registry-index-in-http/</link><pubDate>Wed, 26 Jan 2022 17:36:28 +0000</pubDate><author><name>DCjanus</name><uri>https://github.com/dcjanus</uri><email>DCjanus@dcjanus.com</email></author><guid>https://blog.dcjanus.com/posts/cargo-registry-index-in-http/</guid><description><![CDATA[<p>Rust 的官方包管理系统依赖一个 GitHub 上的 Git 仓库<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>管理索引信息，其相关格式也有较为详细的定义<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>。</p>
<p>随着 crates.io-index 体积的不断膨胀，现有的分发方案逐渐表现出了一些弊端，Rust 社区开发者也提出了名为稀疏索引（Spare Index）的 RFC<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>，用于优化相关场景。春节放假无聊，简单介绍一下前因后果，也希望有兴趣有能力的人可以推动其落地与发展。</p>]]></description></item></channel></rss>